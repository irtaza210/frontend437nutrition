{"ast":null,"code":"var _jsxFileName = \"/Users/irtaza/Documents/GitHub/437nutrition/backend/nutrition/src/components/MenuPage.js\";\nimport React, { Component } from 'react';\nimport './MenuPage.css';\nimport firebase from \"../fire\";\nimport { db } from '../fire';\nimport Dropdown from './Dropdown';\nimport Button from '@material-ui/core/Button';\nimport CustomForm from './CustomForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MenuPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetThenSet = (id, key) => {\n      let locationsCol = db.collection(\"locations\");\n      const temp = [...this.state[key]]; // Get meals for selected location \n\n      locationsCol.doc(temp[id].title).get().then(doc => {\n        let data = doc.data();\n        console.log(\"---- Meals ids we received for location: ----\");\n        console.log(data); // console.log(data.meals);\n\n        temp.forEach(item => item.selected = false);\n        temp[id].selected = true; // Set which location is selected, and set meal ids array:\n\n        this.setState({\n          detailMeal: null,\n          // clears the detail view\n          selectedLocation: temp[id].title,\n          mealIds: data.meals,\n          [key]: temp // don't know what this does, but keeping to avoid problems\n\n        }, function () {\n          console.log(`Selected loc: ${this.state.selectedLocation}, mealIds: ${this.state.mealIds}`); // Do another fetch to get meal details\n\n          this.fetchMealDetails();\n        });\n      });\n    };\n\n    this.state = {\n      selectedLocation: null,\n      detailMeal: null,\n      // meal obj that is clicked\n      mealIds: [],\n      // array of meal ids for selected location\n      meals: [],\n      filteredMeals: [],\n      userObj: null,\n      showCustomForm: false,\n      // add custom meal form \n      location: [{\n        id: 0,\n        title: \"BEAR'S DEN - Ciao Down\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 1,\n        title: \"BEAR'S DEN - Grizzly Grill\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 2,\n        title: \"BEAR'S DEN - L'Chaim\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 3,\n        title: \"BEAR'S DEN - Sizzle & Stir\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 4,\n        title: \"BEAR'S DEN - Top 8 Friendly\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 5,\n        title: \"BEAR'S DEN - WUrld Fusion\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 6,\n        title: \"Bytes\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 7,\n        title: \"CAFÉ BERGSON\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 8,\n        title: \"CHERRY TREE CAFÉ\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 9,\n        title: \"DUC - 1853 Diner\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 10,\n        title: \"DUC - DeliciOSO\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 11,\n        title: \"DUC - Top 8 Friendly\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 12,\n        title: \"DUC - Trattoria Verde\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 13,\n        title: \"DUC - Wash U Wok\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 14,\n        title: \"Kosher\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 15,\n        title: \"LAW CAFÉ\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 16,\n        title: \"Millbrook Market & Coffee\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 17,\n        title: \"PARKSIDE CAFE\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 18,\n        title: \"PAWS & GO MARKET\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 19,\n        title: \"THE VILLAGE - Deli\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 20,\n        title: \"THE VILLAGE - Grill\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 21,\n        title: \"THE VILLAGE - Stir Fry\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 22,\n        title: \"THE VILLAGE - Top 8 Friendly\",\n        selected: false,\n        key: 'location'\n      }, {\n        id: 23,\n        title: \"WHISPERS CAFÉ\",\n        selected: false,\n        key: 'location'\n      }, // user can create meals by clicking on this option and filling out meal info\n      {\n        id: 24,\n        title: \"Custom Meals\",\n        selected: false,\n        key: 'location'\n      }]\n    };\n    this.resetThenSet = this.resetThenSet.bind(this);\n    this.showCustomForm = this.showCustomForm.bind(this);\n    this.hideCustomForm = this.hideCustomForm.bind(this); // this.handleMealClick = this.handleMealClick.bind(this);  // don't need to bind here since we're binding it inside render()\n    // this.handleAddToPlate = this.handleAddToPlate.bind(this);\n    // firebase.auth().onAuthStateChanged(user => {\n    //     user\n    //         ? localStorage.setItem('loggedinuser', JSON.stringify(user))\n    //         : localStorage.removeItem('loggedinuser');\n    // });\n  }\n\n  render() {\n    // If showCustomForm is true, display the form (takes up the whole screen)\n    if (this.state.selectedLocation === \"Custom Meals\" && this.state.showCustomForm && this.state.filteredMeals.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CustomForm, {\n          hideCustomForm: this.hideCustomForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this);\n    } else if (this.state.meals.length > 0 && this.state.filteredMeals.length > 0) {\n      // let elements = this.state.meals.map((item, index) =>\n      //     <div className=\"box\" key={index} onClick={this.handleMealClick.bind(this, item)}>\n      //         <strong>{item.name}</strong>\n      //     </div>\n      // );\n      let elements = this.state.filteredMeals.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        onClick: this.handleMealClick.bind(this, item),\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)); // If a meal is clicked, show detail view for that meal below list of meals, otherwise\n      //  just show the list of meals for that location\n\n      if (this.state.detailMeal !== null) {\n        // return Dropwdown + list of meals + detailed view\n        let meal = this.state.detailMeal;\n        let allergens = meal.allergens.map((str, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: str\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Meals are filtered based on your allergy information (edit in settings).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            title: \"Select location\",\n            list: this.state.location,\n            resetThenSet: this.resetThenSet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-container\",\n            children: [this.state.selectedLocation === \"Custom Meals\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              onClick: this.showCustomForm,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"+ Custom Menu Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 84\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this) : null, elements]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-view-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              id: \"detail-title\",\n              children: meal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 75\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Calories: \", meal.nutrition.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 75\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"addtoplate\",\n              onClick: this.handleAddToPlate.bind(this, meal),\n              children: \"Add to Plate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hn\",\n              children: \"Nutrients per serving:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indivnutrition\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Total Fat: \", meal.nutrition.total_fat_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 89\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Saturated Fat: \", meal.nutrition.sat_fat_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 91\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Trans Fat: \", meal.nutrition.trans_fat_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 89\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Cholesterol: \", meal.nutrition.cholesterol_mg, \"mg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 95\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Sodium: \", meal.nutrition.sodium_mg]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Total Carbs: \", meal.nutrition.total_carbs_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 93\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Dietary Fiber: \", meal.nutrition.fiber_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 89\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Sugars: \", meal.nutrition.sugar_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 82\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Protein: \", meal.nutrition.protein_g, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 85\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Vit. A: \", meal.nutrition.vit_a_per, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Vit. C: \", meal.nutrition.vit_c_per, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Calcium: \", meal.nutrition.calc_per, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Iron: \", meal.nutrition.iron_per, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"n\",\n                children: [\"Allergens: \", allergens]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this);\n      } else {\n        // return Drowdown + list of meals\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Meals are filtered based on your allergy information (edit in settings).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            title: \"Select location\",\n            list: this.state.location,\n            resetThenSet: this.resetThenSet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-container\",\n            children: [this.state.selectedLocation === \"Custom Meals\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              onClick: this.showCustomForm,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"+ Custom Menu Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this) : null, elements]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Meals are filtered based on your allergy information (edit in settings).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          title: \"Select location\",\n          list: this.state.location,\n          resetThenSet: this.resetThenSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this);\n    }\n  } // Called when a meal is clicked. Updates state, so page rerenders with the detailed view.\n\n\n  handleMealClick(meal_obj) {\n    console.log(`----- You clicked:`);\n    console.log(meal_obj);\n    this.setState({\n      detailMeal: meal_obj\n    }, function () {\n      console.log(\"Updated the detailMeal state\");\n    });\n  } // Adds a meal id to the corresponding user in 'todaysmeals' collection. The same meal cannot be added twice.\n\n\n  handleAddToPlate(meal_obj) {\n    console.log(\"Add to plate clicked\"); // If user is signed in, get their uid and use that to update the corresponding doc in db\n    //  by appending the meal id to the user's \"meals\" array (doc is accessed by user's uid)\n\n    let user = firebase.auth().currentUser;\n    console.log(`About to update 'todaysmeals' collection`);\n    db.collection('todaysmeals').doc(user.uid).update({\n      \"meals\": firebase.firestore.FieldValue.arrayUnion(meal_obj.id)\n    }).then(() => {\n      console.log(`Just added ${meal_obj.name} [${meal_obj.id}] to ${user.email}'s plate`);\n      alert(\"Meal Added!\");\n    });\n  } // This function clones the location state, then sets the selected key of each \n  //  object in the array to false and then only sets the clicked item’s selected key to true.\n\n\n  // Get nutrition details for each meal at selected location and update state\n  fetchMealDetails() {\n    console.log(\"______inside fetchMealDetails()______\");\n    console.log(this.state.selectedLocation);\n    let mealsCol = db.collection(\"meals\");\n    let temp_arr = []; // array to store meal objects\n\n    let temp_filtered_arr = []; // stores meals user can eat\n\n    let loggedinuser = JSON.parse(localStorage.getItem('loggedinuser')); // Get user allergen info so we can filter meals\n\n    db.collection(\"users\").doc(loggedinuser.uid).get().then(doc => {\n      let user = doc.data(); // dairy: user.dairy,\n      // egg: user.egg,\n      // wheat: user.wheat,\n      // soybean: user.soybean,\n      // gluten: user.gluten,\n      // nuts: user.nuts,\n\n      let user_allergens = [];\n      if (user.dairy) user_allergens.push(\"Milk\");\n      if (user.egg) user_allergens.push(\"Egg\");\n      if (user.wheat) user_allergens.push(\"Wheat\");\n      if (user.soybean) user_allergens.push(\"Soybean\");\n      if (user.gluten) user_allergens.push(\"Gluten\");\n      if (user.nuts) user_allergens.push(\"Nuts\"); // If there are meals at selected location, get the actual meal objects using the list of IDs\n\n      if (this.state.mealIds.length > 0) {\n        if (user_allergens.length === 0) {\n          // if user has no allergies, just get all meals\n          this.state.mealIds.forEach(meal_id => {\n            mealsCol.doc(meal_id).get().then(doc => {\n              // meal_object = {\n              //     id: String\n              //     name: \"\",\n              //     date: \"\",\n              //     allergens: Strings array,\n              //     nutrition: Map,\n              //     location: String\n              // }\n              let obj = doc.data();\n              let mealObj = {\n                id: meal_id,\n                name: obj.name,\n                date: obj.date,\n                allergens: obj.allergens,\n                nutrition: obj.nutrition,\n                location: obj.location\n              };\n              temp_arr.push(mealObj);\n              console.log(`Meal obj just pushed: ${mealObj}`);\n\n              if (temp_arr.length == this.state.mealIds.length) {\n                this.setState({\n                  meals: temp_arr,\n                  filteredMeals: temp_arr\n                }, function () {\n                  console.log(\"---------Just updated meal objects----------\");\n                });\n              }\n            });\n          });\n        } else {\n          // user has at least 1 allergy, need to filter\n          this.state.mealIds.forEach(meal_id => {\n            console.log(meal_id);\n            mealsCol.doc(meal_id).get().then(doc => {\n              let obj = doc.data();\n              let mealObj = {\n                name: obj.name,\n                id: meal_id,\n                date: obj.date,\n                allergens: obj.allergens,\n                nutrition: obj.nutrition,\n                location: obj.location\n              }; // egg, wheat, soybean gluten nuts\n\n              temp_arr.push(mealObj);\n              console.log(`Meal obj just pushed: ${mealObj}`); // If meal has allergen, don't add meal to filtered meals array, else add it\n\n              if (user.dairy && obj.allergens.indexOf(\"Milk\") !== -1 || user.egg && obj.allergens.indexOf(\"Egg\") !== -1 || user.wheat && obj.allergens.indexOf(\"Wheat\") !== -1 || user.soybean && obj.allergens.indexOf(\"Soybean\") !== -1 || user.gluten && obj.allergens.indexOf(\"Gluten\") !== -1 || user.nuts && obj.allergens.indexOf(\"Nuts\") !== -1) {\n                console.log(\"Meal has allergen user is susceptible to.\");\n              } else {\n                temp_filtered_arr.push(mealObj);\n              }\n\n              if (temp_arr.length == this.state.mealIds.length) {\n                this.setState({\n                  meals: temp_arr,\n                  filteredMeals: temp_filtered_arr\n                }, function () {\n                  console.log(\"---------Just updated meal objects----------\");\n                });\n              }\n            });\n          });\n        }\n      } // end of for loop\n\n    });\n  }\n  /** \n   * Called when \"Create Custom Meal\" box is clicked. Sets the showCustomForm to true so the form renders.\n   */\n\n\n  showCustomForm() {\n    this.setState({\n      showCustomForm: true\n    }, function () {\n      console.log(\"set show custom form\");\n    });\n  }\n\n  hideCustomForm() {\n    this.setState({\n      showCustomForm: false\n    });\n  }\n\n}\n\nexport default MenuPage;","map":{"version":3,"sources":["/Users/irtaza/Documents/GitHub/437nutrition/backend/nutrition/src/components/MenuPage.js"],"names":["React","Component","firebase","db","Dropdown","Button","CustomForm","MenuPage","constructor","props","resetThenSet","id","key","locationsCol","collection","temp","state","doc","title","get","then","data","console","log","forEach","item","selected","setState","detailMeal","selectedLocation","mealIds","meals","fetchMealDetails","filteredMeals","userObj","showCustomForm","location","bind","hideCustomForm","render","length","elements","map","index","handleMealClick","name","meal","allergens","str","nutrition","calories","handleAddToPlate","total_fat_g","sat_fat_g","trans_fat_g","cholesterol_mg","sodium_mg","total_carbs_g","fiber_g","sugar_g","protein_g","vit_a_per","vit_c_per","calc_per","iron_per","meal_obj","user","auth","currentUser","uid","update","firestore","FieldValue","arrayUnion","email","alert","mealsCol","temp_arr","temp_filtered_arr","loggedinuser","JSON","parse","localStorage","getItem","user_allergens","dairy","push","egg","wheat","soybean","gluten","nuts","meal_id","obj","mealObj","date","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './MenuPage.css';\nimport firebase from \"../fire\";\nimport { db } from '../fire';\nimport Dropdown from './Dropdown';\nimport Button from '@material-ui/core/Button';\nimport CustomForm from './CustomForm';\n\n\nclass MenuPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedLocation: null,\n            detailMeal: null,   // meal obj that is clicked\n            mealIds: [],  // array of meal ids for selected location\n            meals: [],\n            filteredMeals: [],\n            userObj: null,\n            showCustomForm: false,  // add custom meal form \n            location: [\n                {\n                    id: 0,\n                    title: \"BEAR'S DEN - Ciao Down\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 1,\n                    title: \"BEAR'S DEN - Grizzly Grill\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 2,\n                    title: \"BEAR'S DEN - L'Chaim\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 3,\n                    title: \"BEAR'S DEN - Sizzle & Stir\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 4,\n                    title: \"BEAR'S DEN - Top 8 Friendly\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 5,\n                    title: \"BEAR'S DEN - WUrld Fusion\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 6,\n                    title: \"Bytes\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 7,\n                    title: \"CAFÉ BERGSON\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 8,\n                    title: \"CHERRY TREE CAFÉ\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 9,\n                    title: \"DUC - 1853 Diner\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 10,\n                    title: \"DUC - DeliciOSO\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 11,\n                    title: \"DUC - Top 8 Friendly\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 12,\n                    title: \"DUC - Trattoria Verde\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 13,\n                    title: \"DUC - Wash U Wok\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 14,\n                    title: \"Kosher\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 15,\n                    title: \"LAW CAFÉ\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 16,\n                    title: \"Millbrook Market & Coffee\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 17,\n                    title: \"PARKSIDE CAFE\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 18,\n                    title: \"PAWS & GO MARKET\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 19,\n                    title: \"THE VILLAGE - Deli\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 20,\n                    title: \"THE VILLAGE - Grill\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 21,\n                    title: \"THE VILLAGE - Stir Fry\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 22,\n                    title: \"THE VILLAGE - Top 8 Friendly\",\n                    selected: false,\n                    key: 'location'\n                },\n                {\n                    id: 23,\n                    title: \"WHISPERS CAFÉ\",\n                    selected: false,\n                    key: 'location'\n                },\n                // user can create meals by clicking on this option and filling out meal info\n                {\n                    id: 24,\n                    title: \"Custom Meals\",\n                    selected: false,\n                    key: 'location'\n                }\n            ],\n\n        }\n\n        this.resetThenSet = this.resetThenSet.bind(this);\n        this.showCustomForm = this.showCustomForm.bind(this);\n        this.hideCustomForm = this.hideCustomForm.bind(this);\n        // this.handleMealClick = this.handleMealClick.bind(this);  // don't need to bind here since we're binding it inside render()\n        // this.handleAddToPlate = this.handleAddToPlate.bind(this);\n\n        // firebase.auth().onAuthStateChanged(user => {\n        //     user\n        //         ? localStorage.setItem('loggedinuser', JSON.stringify(user))\n        //         : localStorage.removeItem('loggedinuser');\n        // });\n\n    }\n\n\n    render() {\n        // If showCustomForm is true, display the form (takes up the whole screen)\n        if (this.state.selectedLocation === \"Custom Meals\" && this.state.showCustomForm && this.state.filteredMeals.length > 0) {\n            return (\n                <div>\n                    <CustomForm hideCustomForm={this.hideCustomForm} />\n                </div>\n            );\n\n        } else if (this.state.meals.length > 0 && this.state.filteredMeals.length > 0) {\n            // let elements = this.state.meals.map((item, index) =>\n            //     <div className=\"box\" key={index} onClick={this.handleMealClick.bind(this, item)}>\n            //         <strong>{item.name}</strong>\n            //     </div>\n            // );\n            let elements = this.state.filteredMeals.map((item, index) =>\n                <div className=\"box\" key={index} onClick={this.handleMealClick.bind(this, item)}>\n                    <strong>{item.name}</strong>\n                </div>\n            );\n\n            // If a meal is clicked, show detail view for that meal below list of meals, otherwise\n            //  just show the list of meals for that location\n            if (this.state.detailMeal !== null) {\n                // return Dropwdown + list of meals + detailed view\n                let meal = this.state.detailMeal;\n                let allergens = meal.allergens.map((str, index) =>\n                    <span key={index}>{str}</span>\n                );\n                return (\n                    <div>\n                        <br></br>\n                        <div>Meals are filtered based on your allergy information (edit in settings).</div>\n                        <Dropdown\n                            title=\"Select location\"\n                            list={this.state.location}\n                            resetThenSet={this.resetThenSet}\n                        />\n                        {/* List of meals: */}\n                        <div className=\"box-container\">\n                            {this.state.selectedLocation === \"Custom Meals\" ?\n                                <div className=\"box\" onClick={this.showCustomForm}><strong>+ Custom Menu Item</strong></div> : null}\n                            {elements}\n                        </div>\n                        {/* Detailed view: */}\n                        <div className=\"detail-view-container\">\n                            <br></br>\n                            <strong id=\"detail-title\">{meal.name}</strong><br></br><br></br>\n                            \n                            <div>Calories: {meal.nutrition.calories}</div><br></br>\n                            {/* When 'Add to Plate' is clicked, pass this meal object to click handler */}\n                            <Button id =\"addtoplate\" onClick={this.handleAddToPlate.bind(this, meal)}>Add to Plate</Button>\n                            <br></br><br></br>\n                            <div id = \"hn\">Nutrients per serving:</div><br></br>\n                            <div className=\"indivnutrition\">\n                            <div id = \"n\">Total Fat: {meal.nutrition.total_fat_g}g</div><br></br>\n                            <div id = \"n\">Saturated Fat: {meal.nutrition.sat_fat_g}g</div><br></br>\n                            <div id = \"n\">Trans Fat: {meal.nutrition.trans_fat_g}g</div><br></br>\n                            <div id = \"n\">Cholesterol: {meal.nutrition.cholesterol_mg}mg</div><br></br>\n                            <div id = \"n\">Sodium: {meal.nutrition.sodium_mg}</div><br></br>\n                            <div id = \"n\">Total Carbs: {meal.nutrition.total_carbs_g}g</div><br></br>\n                            <div id = \"n\">Dietary Fiber: {meal.nutrition.fiber_g}g</div><br></br>\n                            <div id = \"n\">Sugars: {meal.nutrition.sugar_g}g</div><br></br>\n                            <div id = \"n\">Protein: {meal.nutrition.protein_g}g</div><br></br>\n                            <div id = \"n\">Vit. A: {meal.nutrition.vit_a_per}%</div><br></br>\n                            <div id = \"n\">Vit. C: {meal.nutrition.vit_c_per}%</div><br></br>\n                            <div id = \"n\">Calcium: {meal.nutrition.calc_per}%</div><br></br>\n                            <div id = \"n\">Iron: {meal.nutrition.iron_per}%</div><br></br>\n\n                            <div  id = \"n\">Allergens: {allergens}</div><br></br>\n                            </div>\n                        </div>\n                    </div>\n\n                );\n            } else {\n                // return Drowdown + list of meals\n                return (\n                    <div>\n                        <br></br>\n                        <div>Meals are filtered based on your allergy information (edit in settings).</div>\n                        <Dropdown\n                            title=\"Select location\"\n                            list={this.state.location}\n                            resetThenSet={this.resetThenSet}\n                        />\n\n                        <div className=\"box-container\">\n                            {/* If the location selected is 'Custom Meals', then show the \"Add Custom Meal\" as the first box, \n                                otherwise don't show anything */}\n                            {this.state.selectedLocation === \"Custom Meals\" ?\n                                <div className=\"box\" onClick={this.showCustomForm}>\n                                    <strong>+ Custom Menu Item</strong></div> :\n                                null}\n\n                            {elements}\n                        </div>\n\n                        {/* Show add-custom-meal form if the user clicked the \"Add Custom Meal\" box */}\n                        {/* {this.state.selectedLocation === \"Custom Meals\" && this.state.showCustomForm ? \n                            <CustomForm createCustomMeal={this.createCustomMeal} /> : null } */}\n\n                    </div>\n                );\n            }\n\n        } else {\n\n            return (\n                <div>\n                    <br></br>\n                    <div>Meals are filtered based on your allergy information (edit in settings).</div>\n                    <Dropdown\n                        title=\"Select location\"\n                        list={this.state.location}\n                        resetThenSet={this.resetThenSet}\n                    />\n                </div>\n\n            );\n        }\n\n\n    }\n    // Called when a meal is clicked. Updates state, so page rerenders with the detailed view.\n    handleMealClick(meal_obj) {\n        console.log(`----- You clicked:`);\n        console.log(meal_obj);\n        this.setState({\n            detailMeal: meal_obj,\n        }, function () {\n            console.log(\"Updated the detailMeal state\")\n        });\n\n    }\n\n    // Adds a meal id to the corresponding user in 'todaysmeals' collection. The same meal cannot be added twice.\n    handleAddToPlate(meal_obj) {\n        console.log(\"Add to plate clicked\")\n        // If user is signed in, get their uid and use that to update the corresponding doc in db\n        //  by appending the meal id to the user's \"meals\" array (doc is accessed by user's uid)\n        let user = firebase.auth().currentUser;\n        console.log(`About to update 'todaysmeals' collection`);\n        db.collection('todaysmeals').doc(user.uid).update({\n            \"meals\": firebase.firestore.FieldValue.arrayUnion(meal_obj.id)\n        }).then(() => {\n            console.log(`Just added ${meal_obj.name} [${meal_obj.id}] to ${user.email}'s plate`);\n            alert(\"Meal Added!\");\n        });\n\n\n    }\n\n    // This function clones the location state, then sets the selected key of each \n    //  object in the array to false and then only sets the clicked item’s selected key to true.\n    resetThenSet = (id, key) => {\n        let locationsCol = db.collection(\"locations\");\n        \n        const temp = [...this.state[key]];\n\n        // Get meals for selected location \n        locationsCol.doc(temp[id].title).get().then((doc) => {\n            let data = doc.data();\n            console.log(\"---- Meals ids we received for location: ----\");\n            console.log(data);\n            // console.log(data.meals);\n            temp.forEach((item) => item.selected = false);\n            temp[id].selected = true;\n            // Set which location is selected, and set meal ids array:\n            this.setState({\n                detailMeal: null,   // clears the detail view\n                selectedLocation: temp[id].title,\n                mealIds: data.meals,\n                [key]: temp,    // don't know what this does, but keeping to avoid problems\n            }, function () {\n                console.log(`Selected loc: ${this.state.selectedLocation}, mealIds: ${this.state.mealIds}`);\n                // Do another fetch to get meal details\n                this.fetchMealDetails();\n            });\n        });\n\n    }\n\n    // Get nutrition details for each meal at selected location and update state\n    fetchMealDetails() {\n        console.log(\"______inside fetchMealDetails()______\");\n        console.log(this.state.selectedLocation);\n\n        let mealsCol = db.collection(\"meals\");\n        let temp_arr = [];   // array to store meal objects\n        let temp_filtered_arr = []; // stores meals user can eat\n        let loggedinuser = JSON.parse(localStorage.getItem('loggedinuser'));\n        // Get user allergen info so we can filter meals\n        db.collection(\"users\").doc(loggedinuser.uid).get().then((doc) => {\n            let user = doc.data();\n            // dairy: user.dairy,\n            // egg: user.egg,\n            // wheat: user.wheat,\n            // soybean: user.soybean,\n            // gluten: user.gluten,\n            // nuts: user.nuts,\n            let user_allergens = [];\n            if (user.dairy) user_allergens.push(\"Milk\");\n            if (user.egg) user_allergens.push(\"Egg\");\n            if (user.wheat) user_allergens.push(\"Wheat\");\n            if (user.soybean) user_allergens.push(\"Soybean\");\n            if (user.gluten) user_allergens.push(\"Gluten\");\n            if (user.nuts) user_allergens.push(\"Nuts\");\n\n            // If there are meals at selected location, get the actual meal objects using the list of IDs\n            if (this.state.mealIds.length > 0) {\n                if (user_allergens.length === 0) {  // if user has no allergies, just get all meals\n                    this.state.mealIds.forEach((meal_id) => {\n                        mealsCol.doc(meal_id).get().then((doc) => {\n                            // meal_object = {\n                            //     id: String\n                            //     name: \"\",\n                            //     date: \"\",\n                            //     allergens: Strings array,\n                            //     nutrition: Map,\n                            //     location: String\n                            // }\n    \n                            let obj = doc.data();\n                            let mealObj = {\n                                id: meal_id,\n                                name: obj.name,\n                                date: obj.date,\n                                allergens: obj.allergens,\n                                nutrition: obj.nutrition,\n                                location: obj.location,\n                            }\n                            temp_arr.push(mealObj);\n                            console.log(`Meal obj just pushed: ${mealObj}`);\n    \n    \n                            if (temp_arr.length == this.state.mealIds.length) {\n                                this.setState({\n                                    meals: temp_arr,\n                                    filteredMeals: temp_arr,\n                                }, function () {\n                                    console.log(\"---------Just updated meal objects----------\")\n                                });\n                            }\n                        });\n                    });\n                } else {    // user has at least 1 allergy, need to filter\n                    this.state.mealIds.forEach((meal_id) => {\n                        console.log(meal_id);\n                        mealsCol.doc(meal_id).get().then((doc) => {\n                           \n    \n                            let obj = doc.data();\n                             \n                            let mealObj = {\n                                name: obj.name,\n                                id: meal_id,\n                                date: obj.date,\n                                allergens: obj.allergens,\n                                nutrition: obj.nutrition,\n                                location: obj.location,\n                            }\n                            \n                            // egg, wheat, soybean gluten nuts\n                            temp_arr.push(mealObj);\n                            console.log(`Meal obj just pushed: ${mealObj}`);\n                            // If meal has allergen, don't add meal to filtered meals array, else add it\n                            if ((user.dairy && obj.allergens.indexOf(\"Milk\") !== -1) || (user.egg && obj.allergens.indexOf(\"Egg\") !== -1) \n                                || (user.wheat && obj.allergens.indexOf(\"Wheat\") !== -1) || (user.soybean && obj.allergens.indexOf(\"Soybean\") !== -1)\n                                || (user.gluten && obj.allergens.indexOf(\"Gluten\") !== -1) || (user.nuts && obj.allergens.indexOf(\"Nuts\") !== -1)) {\n                                    console.log(\"Meal has allergen user is susceptible to.\");\n                            } else {\n                                temp_filtered_arr.push(mealObj);\n                            }\n\n                            if (temp_arr.length == this.state.mealIds.length) {\n                                this.setState({\n                                    meals: temp_arr,\n                                    filteredMeals: temp_filtered_arr,\n                                }, function () {\n                                    console.log(\"---------Just updated meal objects----------\")\n                                });\n                            }\n    \n    \n                            \n                        });\n                    });\n                }\n                \n            }   // end of for loop\n\n\n        });\n\n\n    }\n\n    /** \n     * Called when \"Create Custom Meal\" box is clicked. Sets the showCustomForm to true so the form renders.\n     */\n    showCustomForm() {\n\n        this.setState({\n            showCustomForm: true,\n        }, function () {\n            console.log(\"set show custom form\");\n        });\n    }\n\n    hideCustomForm() {\n        this.setState({\n            showCustomForm: false,\n        });\n    }\n\n\n\n\n\n}\n\n\nexport default MenuPage;"]},"metadata":{},"sourceType":"module"}