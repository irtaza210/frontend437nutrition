{"ast":null,"code":"var _jsxFileName = \"/Users/irtaza/Documents/GitHub/437nutrition/backend/nutrition/src/components/CustomForm.js\";\nimport React, { Component } from 'react';\nimport './CustomForm.css';\nimport firebase from \"../fire\";\nimport { db } from '../fire'; // import Button from '@material-ui/core/Button';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"2021-11-20\",\n      location: \"WUSTL\",\n      meal_name: null,\n      allergens: null,\n      // array\n      nutrition: null // map\n\n    };\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  render() {\n    let user = JSON.parse(localStorage.getItem(\"loggedinuser\"));\n    let uid = user.uid;\n    let email = user.email;\n    return (\n      /*#__PURE__*/\n      // <div>\n      //     Your email is: {email}\n      //     Your uid is: {uid}\n      // </div>\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"custom-meal-form\",\n          onSubmit: e => this.formSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mealname\",\n            children: [\"Food Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"mealname\",\n              name: \"mealname\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check all allergens in this food:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dairy\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"dairy\",\n              name: \"allergen\",\n              value: \"Milk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 45\n            }, this), \" Dairy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"egg\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"egg\",\n              name: \"allergen\",\n              value: \"Egg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 43\n            }, this), \" Egg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"wheat\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"wheat\",\n              name: \"allergen\",\n              value: \"Wheat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this), \" Wheat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"soybean\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"soybean\",\n              name: \"allergen\",\n              value: \"Soybean\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 47\n            }, this), \" Soybean\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gluten\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"gluten\",\n              name: \"allergen\",\n              value: \"Gluten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 46\n            }, this), \" Gluten\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nuts\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"nuts\",\n              name: \"allergen\",\n              value: \"Nuts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 44\n            }, this), \" Nuts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nutrition info (per serving): \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calories\",\n            children: [\" Calories \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"calories\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 57\n            }, this), \" Kcal \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"total_fat_g\",\n            children: [\" Total Fat \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"total_fat_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 61\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sat_fat_g\",\n            children: [\" Sat Fat \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"sat_fat_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 57\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"trans_fat_g\",\n            children: [\" Trans Fat \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"trans_fat_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 61\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fiber_g\",\n            children: [\" Fiber \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"fiber_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 53\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cholesterol_mg\",\n            children: [\" Cholesterol \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"cholesterol_mg\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 66\n            }, this), \" mg \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sodium_mg\",\n            children: [\" Sodium \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"sodium_mg\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 56\n            }, this), \" mg \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sugar_g\",\n            children: [\" Sugar \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"sugar_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 53\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"total_carbs_g\",\n            children: [\" Total Carbs \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"total_carbs_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 65\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"protein_g\",\n            children: [\" Protein \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"protein_g\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 57\n            }, this), \" g \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"iron_per\",\n            children: [\" Iron \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"iron_per\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 53\n            }, this), \" % \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"calc_per\",\n            children: [\" Calcium \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"calc_per\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 56\n            }, this), \" % \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vit_a_per\",\n            children: [\" Vitamin A \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"vit_a_per\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 59\n            }, this), \" % \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vit_c_per\",\n            children: [\" Vitamin C \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"vit_c_per\",\n              name: \"nutrition\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 59\n            }, this), \" % \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Add Food to Custom Meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.hideCustomForm,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    );\n  }\n  /**\n   * Adds the meal to the \"meals\" collection with name as the doc id. Then calls the parent's hideCustomForm() \n   * @param {event} e \n   */\n\n\n  formSubmit(e) {\n    e.preventDefault(); // get user email (for the \"created_by\" field)\n\n    let user = JSON.parse(localStorage.getItem(\"loggedinuser\"));\n    let form = e.target;\n    let allergens = form.allergen; // get all the allergen checkboxes \n\n    let temp_allergens = []; // temp array to store allergens as strings\n\n    let nutrition = form.nutrition; // get all nutrition fields\n\n    let temp_nutrition = {}; // Fill the allergens array\n\n    for (let i = 0; i < allergens.length; i++) {\n      if (allergens[i].checked) {\n        temp_allergens.push(allergens[i].value);\n        console.log(allergens[i].id);\n      }\n    }\n\n    console.log(temp_allergens); // Fill the nutrition map\n\n    for (let i = 0; i < nutrition.length; i++) {\n      temp_nutrition[nutrition[i].id] = nutrition[i].value;\n    }\n\n    console.log(temp_nutrition); // Crete the meal object \n\n    let meal_obj = {\n      name: form.mealname.value.trim(),\n      allergens: temp_allergens,\n      nutrition: temp_nutrition,\n      location: \"Custom Meals\",\n      date: \"\",\n      // not implemented\n      created_by: user.email\n    }; // Add the meal object to the \"meals\" collection (with name field as the id)\n\n    db.collection(\"meals\").doc(meal_obj[\"name\"]).set(meal_obj).then(() => {\n      console.log(`Just added ${meal_obj.name} to \"meals\" collection`); // Add the meal to the \"Custom Meals\" location\n\n      db.collection(\"locations\").doc(\"Custom Meals\").update({\n        \"meals\": firebase.firestore.FieldValue.arrayUnion(meal_obj.name)\n      }).then(() => {\n        alert(\"Meal added to Custom Meals! Select 'Custom Meals' dropdown option in the Menu page to find it.\");\n        this.props.hideCustomForm();\n      });\n    });\n  }\n\n}\n\nexport default CustomForm;","map":{"version":3,"sources":["/Users/irtaza/Documents/GitHub/437nutrition/backend/nutrition/src/components/CustomForm.js"],"names":["React","Component","firebase","db","CustomForm","constructor","props","state","date","location","meal_name","allergens","nutrition","formSubmit","bind","render","user","JSON","parse","localStorage","getItem","uid","email","e","hideCustomForm","preventDefault","form","target","allergen","temp_allergens","temp_nutrition","i","length","checked","push","value","console","log","id","meal_obj","name","mealname","trim","created_by","collection","doc","set","then","update","firestore","FieldValue","arrayUnion","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './CustomForm.css';\nimport firebase from \"../fire\";\nimport { db } from '../fire';\n// import Button from '@material-ui/core/Button';\n\nclass CustomForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            date: \"2021-11-20\",\n            location: \"WUSTL\",\n            meal_name: null,\n            allergens: null,    // array\n            nutrition: null,    // map\n\n        }\n\n        this.formSubmit = this.formSubmit.bind(this);\n\n\n    }\n\n    render() {\n        let user = JSON.parse(localStorage.getItem(\"loggedinuser\"));\n        let uid = user.uid;\n        let email = user.email;\n\n        return (\n\n            // <div>\n            //     Your email is: {email}\n            //     Your uid is: {uid}\n            // </div>\n\n            <div>\n                <form id=\"custom-meal-form\" onSubmit={(e) => this.formSubmit(e)} >\n\n                    <label htmlFor=\"mealname\">Food Name: <input type=\"text\" id=\"mealname\" name=\"mealname\" required /></label>\n                    \n\n                    <span><strong>Check all allergens in this food:</strong></span>\n                    \n                    <label htmlFor=\"dairy\"> <input type=\"checkbox\" id=\"dairy\" name=\"allergen\" value=\"Milk\" /> Dairy</label>\n\n                    <label htmlFor=\"egg\"> <input type=\"checkbox\" id=\"egg\" name=\"allergen\" value=\"Egg\" /> Egg</label>\n\n                    <label htmlFor=\"wheat\"> <input type=\"checkbox\" id=\"wheat\" name=\"allergen\" value=\"Wheat\" /> Wheat</label>\n\n                    <label htmlFor=\"soybean\"> <input type=\"checkbox\" id=\"soybean\" name=\"allergen\" value=\"Soybean\" /> Soybean</label>\n\n                    <label htmlFor=\"gluten\"> <input type=\"checkbox\" id=\"gluten\" name=\"allergen\" value=\"Gluten\" /> Gluten</label>\n\n                    <label htmlFor=\"nuts\"> <input type=\"checkbox\" id=\"nuts\" name=\"allergen\" value=\"Nuts\" /> Nuts</label>\n\n                    <span><strong>Nutrition info (per serving): </strong></span>\n\n                    <label htmlFor=\"calories\"> Calories <input type=\"number\" id=\"calories\" name=\"nutrition\" required /> Kcal </label>\n                    <label htmlFor=\"total_fat_g\"> Total Fat <input type=\"number\" id=\"total_fat_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"sat_fat_g\"> Sat Fat <input type=\"number\" id=\"sat_fat_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"trans_fat_g\"> Trans Fat <input type=\"number\" id=\"trans_fat_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"fiber_g\"> Fiber <input type=\"number\" id=\"fiber_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"cholesterol_mg\"> Cholesterol <input type=\"number\" id=\"cholesterol_mg\" name=\"nutrition\" required /> mg </label>\n                    \n                    <label htmlFor=\"sodium_mg\"> Sodium <input type=\"number\" id=\"sodium_mg\" name=\"nutrition\" required /> mg </label>\n                    <label htmlFor=\"sugar_g\"> Sugar <input type=\"number\" id=\"sugar_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"total_carbs_g\"> Total Carbs <input type=\"number\" id=\"total_carbs_g\" name=\"nutrition\" required /> g </label>\n                    <label htmlFor=\"protein_g\"> Protein <input type=\"number\" id=\"protein_g\" name=\"nutrition\" required /> g </label>\n\n                    <label htmlFor=\"iron_per\"> Iron <input type=\"number\" id=\"iron_per\" name=\"nutrition\" required /> % </label>\n                    <label htmlFor=\"calc_per\"> Calcium <input type=\"number\" id=\"calc_per\" name=\"nutrition\" required /> % </label>\n                    <label htmlFor=\"vit_a_per\"> Vitamin A <input type=\"number\" id=\"vit_a_per\" name=\"nutrition\" required /> % </label>\n                    <label htmlFor=\"vit_c_per\"> Vitamin C <input type=\"number\" id=\"vit_c_per\" name=\"nutrition\" required /> % </label>\n\n                    {/* <input type=\"submit\" value=\"Add Food to Custom Meals\" /> */}\n                    <input type=\"submit\" value=\"Add Food to Custom Meals\" />\n                    <button onClick={this.props.hideCustomForm}>Cancel</button>\n\n                    \n                </form>\n            </div>\n        );\n    }\n\n    \n    /**\n     * Adds the meal to the \"meals\" collection with name as the doc id. Then calls the parent's hideCustomForm() \n     * @param {event} e \n     */\n    formSubmit(e) {\n        e.preventDefault();\n        // get user email (for the \"created_by\" field)\n        let user = JSON.parse(localStorage.getItem(\"loggedinuser\"));\n        let form = e.target;\n        let allergens = form.allergen;  // get all the allergen checkboxes \n        let temp_allergens = [];    // temp array to store allergens as strings\n\n        let nutrition = form.nutrition; // get all nutrition fields\n        let temp_nutrition = {};\n        // Fill the allergens array\n        for (let i = 0; i < allergens.length; i++) {\n            if (allergens[i].checked) {\n                temp_allergens.push(allergens[i].value);\n                console.log(allergens[i].id);\n            }\n        }\n        console.log(temp_allergens);\n        // Fill the nutrition map\n        for (let i = 0; i < nutrition.length; i++) {\n            temp_nutrition[nutrition[i].id] = nutrition[i].value;\n        }\n        console.log(temp_nutrition);\n        \n        // Crete the meal object \n        let meal_obj = {\n            name: form.mealname.value.trim(),\n            allergens: temp_allergens,\n            nutrition: temp_nutrition,\n            location: \"Custom Meals\",\n            date: \"\",   // not implemented\n            created_by: user.email,\n        }\n\n        // Add the meal object to the \"meals\" collection (with name field as the id)\n        db.collection(\"meals\").doc(meal_obj[\"name\"]).set(meal_obj).then(() => {\n            console.log(`Just added ${meal_obj.name} to \"meals\" collection`);\n\n            // Add the meal to the \"Custom Meals\" location\n            db.collection(\"locations\").doc(\"Custom Meals\").update({\n                \"meals\": firebase.firestore.FieldValue.arrayUnion(meal_obj.name)\n            }).then(() => {\n                alert(\"Meal added to Custom Meals! Select 'Custom Meals' dropdown option in the Menu page to find it.\");\n                this.props.hideCustomForm();    \n            });\n            \n        });\n        \n        \n    }\n\n\n\n}\n\nexport default CustomForm"]},"metadata":{},"sourceType":"module"}